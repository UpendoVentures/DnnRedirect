

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE {databaseOwner}[{objectQualifier}avtRedirectParams](
	[RedirectParamId] [int] IDENTITY(1,1) NOT NULL,
	[ModuleId] [int] NOT NULL,
	[Param] [nvarchar](100) NOT NULL,
	[ParamType] [int] NOT NULL,
	[Operation] [int] NOT NULL,
	[Value] [nvarchar](255) NOT NULL,
	[RedirectPriority] [int] NOT NULL CONSTRAINT [DF_{objectQualifier}avtRedirectParams_RedirectPriority]  DEFAULT ((0)),
	[LogoutUser] [int] NOT NULL CONSTRAINT [DF_{objectQualifier}avtRedirectParams_LogoutUser]  DEFAULT ((0)),
	[RedirectUrl] [nvarchar](1024) NULL,
 CONSTRAINT [PK_{objectQualifier}avtRedirectParams] PRIMARY KEY CLUSTERED 
(
	[RedirectParamId] ASC
)
) ON [PRIMARY]

GO


IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}avtRedirectParams_{objectQualifier}Modules]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE {databaseOwner}[{objectQualifier}avtRedirectParams]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}avtRedirectParams_{objectQualifier}Modules] FOREIGN KEY([ModuleId])
REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleId])
ON DELETE CASCADE
GO
ALTER TABLE {databaseOwner}[{objectQualifier}avtRedirectParams] CHECK CONSTRAINT [FK_{objectQualifier}avtRedirectParams_{objectQualifier}Modules]
GO


---------------------------------------------------------------------------------------------------------------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure {databaseOwner}[{objectQualifier}avtRedirect_GetRedirectParamById]

	@redirectParamId int

as

	SELECT * FROM {databaseOwner}{objectQualifier}avtRedirectParams
	Where RedirectParamId = @redirectParamId

GO

---------------------------------------------------------------------------------------------------------------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure {databaseOwner}[{objectQualifier}avtRedirect_GetRedirectsParam]

	@moduleId int

as

	SELECT * FROM {databaseOwner}{objectQualifier}avtRedirectParams
	Where ModuleId = @moduleId
	ORDER BY RedirectPriority DESC

GO

---------------------------------------------------------------------------------------------------------------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}avtRedirect_RemoveRedirectParamById]

	@redirectParamId		int

AS

	DELETE FROM {databaseOwner}{objectQualifier}avtRedirectParams WHERE RedirectParamId = @redirectParamId


GO

---------------------------------------------------------------------------------------------------------------


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE {databaseOwner}[{objectQualifier}avtRedirect_UpdateRedirectParam]

	@ModuleId			int,
	@Param				nvarchar(100),
	@ParamType			int,
	@Operation			int,
	@Value				nvarchar(255),
	@RedirectUrl		nvarchar(1024),
	@RedirectPriority	int,
	@LogoutUser			int
	

AS


IF EXISTS (SELECT RedirectParamId FROM {databaseOwner}{objectQualifier}avtRedirectParams WHERE Param = @Param AND ParamType = @ParamType AND Value = @Value)
	UPDATE {databaseOwner}{objectQualifier}avtRedirectParams
		SET	
			ModuleId = @ModuleId,
			Operation = @Operation, 
			RedirectPriority = @RedirectPriority, 
			LogoutUser = @LogoutUser, 
			RedirectUrl = @RedirectUrl
		WHERE Param = @Param AND ParamType = @ParamType AND Value = @Value
ELSE
	INSERT INTO {databaseOwner}{objectQualifier}avtRedirectParams(ModuleId, Param, ParamType, Operation, Value, RedirectPriority, LogoutUser, RedirectUrl)
		VALUES(@ModuleId, @Param, @ParamType, @Operation, @Value, @RedirectPriority, @LogoutUser, @RedirectUrl)


GO


